code        operands    stack       comments
====================================================================================================
halt        0           0           halts the virtual machine

loadc       2           +1          pushes a constant on the stack from a value from the pool
loadg       2           +1          pushes a global on the stack
loadl       1           +1          pushes a local variable onto the stack
loada       0           -1          pops an array reference and index, and pushes the array item

storeg      4           -1          pops a value from the stack into a global
storel      1           -1          pops a value from the stack into a local
storea      0           -3          pops a value into an array slot

drop        0           -1          removes the top-of-stack.
dup         0           +1          duplicates the item on TOS.

resv        2           1           reserves local variables by shifting the stack pointer

jmp         2           0           jumps by n addresses
rjmp        2           0           jumps back by n addresses
jmpz        2           0           jumps forward n addresses if TOS == 0
rjmpz       2           0           jumps back n addresses if TOS == 0
jmpnz       2           0           jumps forward n addresses if TOS != 0
rjmpnz      2           0           jumps back n addresses if TOS != 0

call        2           -1          calls a function with n arguments
ret         0           0           returns from a function

ioselect    2           0           selects an I/O device ID
iowrite     0           -1          writes the top of stack to the IO device
ioread      0           +1          reads a line of text from the IO device onto the stack
iostyle     2           0           sets the IO device style

parse       2           0           s

i2s         0           0           converts the TOS from integer to string
i2f         0           0
f2s         0           0
f2i         0           0

addi        0           -1          adds two integers
subi        0           -1          subtracts an integer from another
muli        0           -1          multiplies two integers
divi        0           -1          divides an integer by another
cmpi        0           -1          compares two integers

addf        0           -1          adds two floats
subf        0           -1          subtracts an float from another
mulf        0           -1          multiplies two floats
divf        0           -1          divides an float by another
cmpf        0           -1          compares two floats

cmps        0           -1          compares two strings
