// generated by gen_code.py
#include <compass/types.hpp>
#include <compass/bytecode.hpp>
namespace amyinorbit::compass {
struct InstructionData { Opcode op; i8 operands; i8 stack; };    static const map<string, InstructionData> instruction_data = {
        {"halt", {Opcode::halt, 0, 0}},
        {"loadc", {Opcode::loadc, 2, 1}},
        {"loadg", {Opcode::loadg, 2, 1}},
        {"loadl", {Opcode::loadl, 1, 1}},
        {"loada", {Opcode::loada, 0, -1}},
        {"storeg", {Opcode::storeg, 4, -1}},
        {"storel", {Opcode::storel, 1, -1}},
        {"storea", {Opcode::storea, 0, -3}},
        {"drop", {Opcode::drop, 0, -1}},
        {"dup", {Opcode::dup, 0, 1}},
        {"resv", {Opcode::resv, 2, 1}},
        {"jmp", {Opcode::jmp, 2, 0}},
        {"rjmp", {Opcode::rjmp, 2, 0}},
        {"jmpz", {Opcode::jmpz, 2, 0}},
        {"rjmpz", {Opcode::rjmpz, 2, 0}},
        {"jmpnz", {Opcode::jmpnz, 2, 0}},
        {"rjmpnz", {Opcode::rjmpnz, 2, 0}},
        {"call", {Opcode::call, 2, -1}},
        {"ret", {Opcode::ret, 0, 0}},
        {"ioselect", {Opcode::ioselect, 2, 0}},
        {"iowrite", {Opcode::iowrite, 0, -1}},
        {"ioread", {Opcode::ioread, 0, 1}},
        {"iostyle", {Opcode::iostyle, 2, 0}},
        {"parse", {Opcode::parse, 2, 0}},
        {"i2s", {Opcode::i2s, 0, 0}},
        {"i2f", {Opcode::i2f, 0, 0}},
        {"f2s", {Opcode::f2s, 0, 0}},
        {"f2i", {Opcode::f2i, 0, 0}},
        {"addi", {Opcode::addi, 0, -1}},
        {"subi", {Opcode::subi, 0, -1}},
        {"muli", {Opcode::muli, 0, -1}},
        {"divi", {Opcode::divi, 0, -1}},
        {"cmpi", {Opcode::cmpi, 0, -1}},
        {"addf", {Opcode::addf, 0, -1}},
        {"subf", {Opcode::subf, 0, -1}},
        {"mulf", {Opcode::mulf, 0, -1}},
        {"divf", {Opcode::divf, 0, -1}},
        {"cmpf", {Opcode::cmpf, 0, -1}},
        {"cmps", {Opcode::cmps, 0, -1}},
    };
}
